AWSTemplateFormatVersion: '2010-09-09'

Transform: AWS::Serverless-2016-10-31
Description: >
  AWS Sample App to access Hashicorp Vault using assumed role
Parameters:
  VaultAccountId:
    Description: Please provide the Vault Account Id
    Type: String
    Default: vault_account_id
  VaultAddr:
    Description: Please provide the Vault endpoint
    Type: String
    Default: http://hvault-svc-local:8200
  VaultNamespace:
    Description: Please provide the Vault Namespace
    Type: String
    Default: nsname
  VaultKvMount:
    Description: Vault KV Mount Path, defaults to kv
    Type: String
    Default: kv
  VaultOption3RoleArn:
    Description: Option 3 Vault AWS Role Arn
    Type: String
    Default: vault-role-arn

Globals:
  Function:
    Timeout: 30

Resources:
  HVaultOpt3Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: HVaultOpt3Role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: vault_policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: sts:AssumeRole
                Resource: !Ref VaultOption3RoleArn
  HVaultOpt12Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: HVaultOpt12Role
      Tags:
        - Key: 'vault-access'
          Value: !Ref VaultAccountId
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
              AWS: !Sub
                - arn:aws:iam::${vaultaccountid}:root
                - { vaultaccountid: !Ref VaultAccountId}
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: vault_policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: iam:GetRole
                Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/HVaultOpt12Role'
              - Effect: Allow
                Action: sts:GetCallerIdentity
                Resource: '*'

  HVaultAccessFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          VAULT_ADDR: !Ref VaultAddr
          VAULT_NAMESPACE: !Ref VaultNamespace
          VAULT_AWS_REGION: !Ref "AWS::Region"
          VAULT_KV_MOUNT: !Ref VaultKvMount
      FunctionName: HVaultAuthFunction
      Events:
        HVaultAccess:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hvault
            Method: get
      Role: !GetAtt HVaultOpt12Role.Arn
Outputs:
  HVaultAccessApi:
    Description: "API Gateway endpoint URL for Prod stage for Hashicorp Vault Access"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hvault/"
  HVaultAccessFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HVaultOpt12Role.Arn

